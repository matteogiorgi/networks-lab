!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/geoteo/Documents/reti/laboratorio22/RCL22/assegnamento05/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BiCons	Functions.java	/^interface BiCons<T,V>$/;"	i
BiFun	Functions.java	/^interface BiFun<T,V,R>$/;"	i
Cons	Functions.java	/^interface Cons<T>$/;"	i
Fun	Functions.java	/^interface Fun<T,R>$/;"	i
Functions	Functions.java	/^public class Functions$/;"	c
MainClassMultiThread	MainClassMultiThread.java	/^public class MainClassMultiThread$/;"	c
MainClassSingleThread	MainClassSingleThread.java	/^public class MainClassSingleThread$/;"	c
SingletonOperator	SingletonOperator.java	/^    private SingletonOperator(T t)$/;"	m	class:SingletonOperator	file:
SingletonOperator	SingletonOperator.java	/^public final class SingletonOperator<T>$/;"	c
Suppl	Functions.java	/^interface Suppl<T>$/;"	i
TriFun	Functions.java	/^interface TriFun<T,V,U,R>$/;"	i
VoidFun	Functions.java	/^interface VoidFun$/;"	i
accept	Functions.java	/^    public static <T,V> void accept(BiCons<T,V> biCons, T arg1, V arg2)$/;"	m	class:Functions
accept	Functions.java	/^    public static <T> void accept(Cons<T> cons, T arg)$/;"	m	class:Functions
accept	Functions.java	/^    void accept(T argT) throws Exception;$/;"	m	interface:Cons
accept	Functions.java	/^    void accept(T argT, V argV) throws Exception;$/;"	m	interface:BiCons
apply	Functions.java	/^    R apply(T argT) throws Exception;$/;"	m	interface:Fun
apply	Functions.java	/^    R apply(T argT, V argV) throws Exception;$/;"	m	interface:BiFun
apply	Functions.java	/^    R apply(T argT, V argV, U argU) throws Exception;$/;"	m	interface:TriFun
apply	Functions.java	/^    public static <T,R> R apply(Fun<T,R> fun, T argT)$/;"	m	class:Functions
apply	Functions.java	/^    public static <T,V,R> R apply(BiFun<T,V,R> biFun, T argT, V argV)$/;"	m	class:Functions
apply	Functions.java	/^    public static <T,V,U,R> R apply(TriFun<T,V,U,R> triFun, T argT, V argV, U argU)$/;"	m	class:Functions
check	SingletonOperator.java	/^    public synchronized void check(Predicate<T> pred)$/;"	m	class:SingletonOperator
flick	SingletonOperator.java	/^    public synchronized void flick(UnaryOperator<T> fun)$/;"	m	class:SingletonOperator
get	Functions.java	/^    T get() throws Exception;$/;"	m	interface:Suppl
get	Functions.java	/^    public static <T> T get(Suppl<T> suppl)$/;"	m	class:Functions
get	SingletonOperator.java	/^    public static synchronized <T> SingletonOperator<T> get()$/;"	m	class:SingletonOperator
get	SingletonOperator.java	/^    public static synchronized <T> SingletonOperator<T> get(T t)$/;"	m	class:SingletonOperator
main	MainClassMultiThread.java	/^    public static void main(String... args)$/;"	m	class:MainClassMultiThread
main	MainClassSingleThread.java	/^    public static void main(String... args)$/;"	m	class:MainClassSingleThread
run	Functions.java	/^    public static void run(VoidFun voidFun)$/;"	m	class:Functions
run	Functions.java	/^    void run() throws Exception;$/;"	m	interface:VoidFun
singleton	SingletonOperator.java	/^    private static SingletonOperator<?> singleton = null;$/;"	f	class:SingletonOperator	file:
titty	SingletonOperator.java	/^    private T titty;$/;"	f	class:SingletonOperator	file:
